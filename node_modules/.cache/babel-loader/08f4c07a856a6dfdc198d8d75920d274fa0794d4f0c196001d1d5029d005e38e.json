{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [!$setup.isLoggedIn ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.$router.push('/login'))\n  }, \"로그인\"), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = $event => _ctx.$router.push('/signup'))\n  }, \"회원가입\")])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createTextVNode(_toDisplayString($setup.username) + \"님 로그인 중 \", 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $setup.handleLogout && $setup.handleLogout(...args))\n  }, \"로그아웃\")]))]);\n}","map":{"version":3,"names":["key","_createElementBlock","$setup","isLoggedIn","_hoisted_1","_createElementVNode","onClick","_cache","$event","_ctx","$router","push","_hoisted_2","_createTextVNode","_toDisplayString","username","args","handleLogout"],"sources":["/Users/idoyun/Ssafy/SpringJWT_front/springjwt_vue/src/components/Home.vue"],"sourcesContent":["<template>\n    <div>\n      <div v-if=\"!isLoggedIn\">\n        <button @click=\"$router.push('/login')\">로그인</button>\n        <button @click=\"$router.push('/signup')\">회원가입</button>\n      </div>\n      <div v-else>\n        {{ username }}님 로그인 중\n        <button @click=\"handleLogout\">로그아웃</button>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  import { isLoggedIn, getUsername, logout } from '../services/auth';\n  import { ref } from 'vue';\n  \n  export default {\n    setup() {\n      const logged = ref(isLoggedIn());\n      const username = ref(getUsername());\n      const handleLogout = () => {\n        logout();\n        // 페이지 리로드 또는 라우트 강제 이동\n        window.location.href = '/';\n      };\n      return { isLoggedIn: logged, username, handleLogout };\n    }\n  };\n  </script>"],"mappings":";;;EAAAA,GAAA;AAAA;;EAAAA,GAAA;AAAA;;uBACIC,mBAAA,CASM,c,CARQC,MAAA,CAAAC,UAAU,I,cAAtBF,mBAAA,CAGM,OALZG,UAAA,GAGQC,mBAAA,CAAoD;IAA3CC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,IAAA,CAAAC,OAAO,CAACC,IAAI;KAAY,KAAG,GAC3CN,mBAAA,CAAsD;IAA7CC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,IAAA,CAAAC,OAAO,CAACC,IAAI;KAAa,MAAI,E,oBAE/CV,mBAAA,CAGM,OATZW,UAAA,GAAAC,gBAAA,CAAAC,gBAAA,CAOWZ,MAAA,CAAAa,QAAQ,IAAG,UACd,iBAAAV,mBAAA,CAA2C;IAAlCC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAS,IAAA,KAAEd,MAAA,CAAAe,YAAA,IAAAf,MAAA,CAAAe,YAAA,IAAAD,IAAA,CAAY;KAAE,MAAI,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}