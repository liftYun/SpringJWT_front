{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [!$setup.loggedIn ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.$router.push('/login'))\n  }, \"로그인\"), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = $event => _ctx.$router.push('/signup'))\n  }, \"회원가입\")])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createTextVNode(_toDisplayString($setup.username) + \"님 로그인 중 \", 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $setup.logoutAndReload && $setup.logoutAndReload(...args))\n  }, \"로그아웃\")]))]);\n}","map":{"version":3,"names":["key","_createElementBlock","$setup","loggedIn","_hoisted_1","_createElementVNode","onClick","_cache","$event","_ctx","$router","push","_hoisted_2","_createTextVNode","_toDisplayString","username","args","logoutAndReload"],"sources":["/Users/idoyun/Ssafy/SpringJWT_front/springjwt_vue/src/components/HomeView.vue"],"sourcesContent":["<!-- src/components/Home.vue -->\n<template>\n  <div>\n    <div v-if=\"!loggedIn\">\n      <button @click=\"$router.push('/login')\">로그인</button>\n      <button @click=\"$router.push('/signup')\">회원가입</button>\n    </div>\n    <div v-else>\n      {{ username }}님 로그인 중\n      <button @click=\"logoutAndReload\">로그아웃</button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted } from 'vue';\nimport { isLoggedIn, getUsername, logout } from '../services/auth';\nimport { useRouter } from 'vue-router';\n\nexport default {\n  setup() {\n    const router = useRouter();\n    const loggedIn = ref(false);\n    const username = ref('');\n\n    // 마운트 직후, 서비스 상태 반영\n    onMounted(() => {\n      loggedIn.value = isLoggedIn();\n      username.value = getUsername();\n    });\n\n    const logoutAndReload = async () => {\n      // 1) 백엔드에도 호출하고\n      await logout();\n      // 2) 현재 페이지 새로고침\n      router.go(0);\n\n    };\n\n    return { loggedIn, username, logoutAndReload };\n  }\n};\n</script>\n"],"mappings":";;;EAAAA,GAAA;AAAA;;EAAAA,GAAA;AAAA;;uBAEEC,mBAAA,CASM,c,CARQC,MAAA,CAAAC,QAAQ,I,cAApBF,mBAAA,CAGM,OANVG,UAAA,GAIMC,mBAAA,CAAoD;IAA3CC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,IAAA,CAAAC,OAAO,CAACC,IAAI;KAAY,KAAG,GAC3CN,mBAAA,CAAsD;IAA7CC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,IAAA,CAAAC,OAAO,CAACC,IAAI;KAAa,MAAI,E,oBAE/CV,mBAAA,CAGM,OAVVW,UAAA,GAAAC,gBAAA,CAAAC,gBAAA,CAQSZ,MAAA,CAAAa,QAAQ,IAAG,UACd,iBAAAV,mBAAA,CAA8C;IAArCC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAS,IAAA,KAAEd,MAAA,CAAAe,eAAA,IAAAf,MAAA,CAAAe,eAAA,IAAAD,IAAA,CAAe;KAAE,MAAI,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}