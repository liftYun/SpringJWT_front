{"ast":null,"code":"import axios from 'axios';\nimport jwtDecode from 'jwt-decode';\nconst api = axios.create({\n  baseURL: 'http://localhost:8080',\n  withCredentials: true // HttpOnly 쿠키 자동 포함\n});\n\n// 로컬스토리지에 있는 accessToken을 axios 기본 헤더에 설정\nexport function setAuthHeader() {\n  const token = localStorage.getItem('accessToken');\n  if (token) {\n    api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n  }\n}\nexport async function login(username, password) {\n  const params = new URLSearchParams();\n  params.append('username', username);\n  params.append('password', password);\n  const res = await api.post('/login', params);\n  const token = res.headers['authorization']?.split(' ')[1];\n  console.log('로그인 토큰:', token);\n  if (!token) throw new Error('No access token');\n  localStorage.setItem('accessToken', token);\n  setAuthHeader();\n}\nexport async function signup(username, password) {\n  await api.put('/join', {\n    username,\n    password\n  });\n}\nexport function logout() {\n  localStorage.removeItem('accessToken');\n  delete api.defaults.headers.common['Authorization'];\n}\nexport function isLoggedIn() {\n  return !!localStorage.getItem('accessToken');\n}\nexport function getUsername() {\n  try {\n    const token = localStorage.getItem('accessToken');\n    if (!token) return null;\n    const {\n      username\n    } = jwtDecode(token);\n    return username;\n  } catch {\n    return null;\n  }\n}\nexport default api;","map":{"version":3,"names":["axios","jwtDecode","api","create","baseURL","withCredentials","setAuthHeader","token","localStorage","getItem","defaults","headers","common","login","username","password","params","URLSearchParams","append","res","post","split","console","log","Error","setItem","signup","put","logout","removeItem","isLoggedIn","getUsername"],"sources":["/Users/idoyun/Ssafy/SpringJWT_front/springjwt_vue/src/services/auth.js"],"sourcesContent":["import axios from 'axios';\nimport jwtDecode from 'jwt-decode';\n\nconst api = axios.create({\n  baseURL: 'http://localhost:8080',\n  withCredentials: true,   // HttpOnly 쿠키 자동 포함\n});\n\n// 로컬스토리지에 있는 accessToken을 axios 기본 헤더에 설정\nexport function setAuthHeader() {\n  const token = localStorage.getItem('accessToken');\n  if (token) {\n    api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n  }\n}\n\nexport async function login(username, password) {\n  const params = new URLSearchParams();\n  params.append('username', username);\n  params.append('password', password);\n\n  const res = await api.post('/login', params);\n  const token = res.headers['authorization']?.split(' ')[1];\n\n  console.log('로그인 토큰:', token);\n\n  if (!token) throw new Error('No access token');\n\n  localStorage.setItem('accessToken', token);\n  setAuthHeader();\n}\n\nexport async function signup(username, password) {\n  await api.put('/join', { username, password });\n}\n\nexport function logout() {\n  localStorage.removeItem('accessToken');\n  delete api.defaults.headers.common['Authorization'];\n}\n\nexport function isLoggedIn() {\n  return !!localStorage.getItem('accessToken');\n}\n\nexport function getUsername() {\n  try {\n    const token = localStorage.getItem('accessToken');\n    if (!token) return null;\n    const { username } = jwtDecode(token);\n    return username;\n  } catch {\n    return null;\n  }\n}\n\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAElC,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAE,uBAAuB;EAChCC,eAAe,EAAE,IAAI,CAAI;AAC3B,CAAC,CAAC;;AAEF;AACA,OAAO,SAASC,aAAaA,CAAA,EAAG;EAC9B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;EACjD,IAAIF,KAAK,EAAE;IACTL,GAAG,CAACQ,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAG,UAAUL,KAAK,EAAE;EAClE;AACF;AAEA,OAAO,eAAeM,KAAKA,CAACC,QAAQ,EAAEC,QAAQ,EAAE;EAC9C,MAAMC,MAAM,GAAG,IAAIC,eAAe,CAAC,CAAC;EACpCD,MAAM,CAACE,MAAM,CAAC,UAAU,EAAEJ,QAAQ,CAAC;EACnCE,MAAM,CAACE,MAAM,CAAC,UAAU,EAAEH,QAAQ,CAAC;EAEnC,MAAMI,GAAG,GAAG,MAAMjB,GAAG,CAACkB,IAAI,CAAC,QAAQ,EAAEJ,MAAM,CAAC;EAC5C,MAAMT,KAAK,GAAGY,GAAG,CAACR,OAAO,CAAC,eAAe,CAAC,EAAEU,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EAEzDC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEhB,KAAK,CAAC;EAE7B,IAAI,CAACA,KAAK,EAAE,MAAM,IAAIiB,KAAK,CAAC,iBAAiB,CAAC;EAE9ChB,YAAY,CAACiB,OAAO,CAAC,aAAa,EAAElB,KAAK,CAAC;EAC1CD,aAAa,CAAC,CAAC;AACjB;AAEA,OAAO,eAAeoB,MAAMA,CAACZ,QAAQ,EAAEC,QAAQ,EAAE;EAC/C,MAAMb,GAAG,CAACyB,GAAG,CAAC,OAAO,EAAE;IAAEb,QAAQ;IAAEC;EAAS,CAAC,CAAC;AAChD;AAEA,OAAO,SAASa,MAAMA,CAAA,EAAG;EACvBpB,YAAY,CAACqB,UAAU,CAAC,aAAa,CAAC;EACtC,OAAO3B,GAAG,CAACQ,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC;AACrD;AAEA,OAAO,SAASkB,UAAUA,CAAA,EAAG;EAC3B,OAAO,CAAC,CAACtB,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;AAC9C;AAEA,OAAO,SAASsB,WAAWA,CAAA,EAAG;EAC5B,IAAI;IACF,MAAMxB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;IACjD,IAAI,CAACF,KAAK,EAAE,OAAO,IAAI;IACvB,MAAM;MAAEO;IAAS,CAAC,GAAGb,SAAS,CAACM,KAAK,CAAC;IACrC,OAAOO,QAAQ;EACjB,CAAC,CAAC,MAAM;IACN,OAAO,IAAI;EACb;AACF;AAEA,eAAeZ,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}