{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { login } from '../services/auth';\nexport default {\n  name: 'LoginPage',\n  setup() {\n    const router = useRouter(); // ← 이렇게 가져와야 합니다\n    const username = ref('');\n    const password = ref('');\n    const handleSubmit = async () => {\n      try {\n        await login(username.value, password.value);\n        // 로그인 성공 시에만 이동\n        router.push('/');\n      } catch (e) {\n        // 실제 API 실패나 이동 에러 모두 여기로 잡히니,\n        // 네트워크 로그를 함께 찍어보면 더 정확합니다.\n        console.error('로그인 에러:', e);\n        alert('로그인 실패');\n      }\n    };\n    return {\n      username,\n      password,\n      handleSubmit\n    };\n  }\n};","map":{"version":3,"names":["ref","useRouter","login","name","setup","router","username","password","handleSubmit","value","push","e","console","error","alert"],"sources":["/Users/idoyun/Ssafy/SpringJWT_front/springjwt_vue/src/components/LoginView.vue"],"sourcesContent":["<!-- <template>\n    <form @submit.prevent=\"handleSubmit\">\n      <div>\n        <label>아이디:</label>\n        <input v-model=\"username\" required />\n      </div>\n      <div>\n        <label>비밀번호:</label>\n        <input type=\"password\" v-model=\"password\" required />\n      </div>\n      <button type=\"submit\">로그인</button>\n    </form>\n  </template>\n  \n  <script>\n  import { login } from '../services/auth';\n  import { ref } from 'vue';\n  \n  export default {\n    setup(_, { router }) {\n      const username = ref('');\n      const password = ref('');\n      const handleSubmit = async () => {\n        try {\n          await login(username.value, password.value);\n          router.push('/');\n        } catch (e) {\n          alert('로그인 실패');\n        }\n      };\n      return { username, password, handleSubmit };\n    }\n  };\n  </script> -->\n\n<template>\n  <form @submit.prevent=\"handleSubmit\">\n    <div>\n      <label>아이디:</label>\n      <input v-model=\"username\" required />\n    </div>\n    <div>\n      <label>비밀번호:</label>\n      <input type=\"password\" v-model=\"password\" required />\n    </div>\n    <button type=\"submit\">로그인</button>\n  </form>\n</template>\n\n<script>\nimport { ref } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { login } from '../services/auth';\n\nexport default {\n  name: 'LoginPage',\n  setup() {\n    const router = useRouter();      // ← 이렇게 가져와야 합니다\n    const username = ref('');\n    const password = ref('');\n\n    const handleSubmit = async () => {\n      try {\n        await login(username.value, password.value);\n        // 로그인 성공 시에만 이동\n        router.push('/');\n      } catch (e) {\n        // 실제 API 실패나 이동 에러 모두 여기로 잡히니,\n        // 네트워크 로그를 함께 찍어보면 더 정확합니다.\n        console.error('로그인 에러:', e);\n        alert('로그인 실패');\n      }\n    };\n\n    return { username, password, handleSubmit };\n  }\n};\n</script>\n"],"mappings":";AAkDA,SAASA,GAAE,QAAS,KAAK;AACzB,SAASC,SAAQ,QAAS,YAAY;AACtC,SAASC,KAAI,QAAS,kBAAkB;AAExC,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,KAAKA,CAAA,EAAG;IACN,MAAMC,MAAK,GAAIJ,SAAS,CAAC,CAAC,EAAO;IACjC,MAAMK,QAAO,GAAIN,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMO,QAAO,GAAIP,GAAG,CAAC,EAAE,CAAC;IAExB,MAAMQ,YAAW,GAAI,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMN,KAAK,CAACI,QAAQ,CAACG,KAAK,EAAEF,QAAQ,CAACE,KAAK,CAAC;QAC3C;QACAJ,MAAM,CAACK,IAAI,CAAC,GAAG,CAAC;MAClB,EAAE,OAAOC,CAAC,EAAE;QACV;QACA;QACAC,OAAO,CAACC,KAAK,CAAC,SAAS,EAAEF,CAAC,CAAC;QAC3BG,KAAK,CAAC,QAAQ,CAAC;MACjB;IACF,CAAC;IAED,OAAO;MAAER,QAAQ;MAAEC,QAAQ;MAAEC;IAAa,CAAC;EAC7C;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}